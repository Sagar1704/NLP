package sea.nlp.ngram;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Unigram extends NGram implements Unsmoothed, Smoothed {
	private int totalUnigramCount;
	
	public Unigram(ArrayList<String> words) {
		super(words);
		this.totalUnigramCount = 0;
	}

	public List<Unigram> generateUnigrams(File input) throws FileNotFoundException {

		List<Unigram> unigrams = new ArrayList<Unigram>();
		Scanner scanner = new Scanner(input);
		try {
			while (scanner.hasNextLine()) {
				String token = scanner.nextLine();
				ArrayList<String> tempList = new ArrayList<String>();
				tempList.add(token);
				Unigram unigram = new Unigram(tempList);
				if (!unigrams.contains(unigram)) {
					unigrams.add(unigram);
				} else {
					unigram = unigrams.get(unigrams.indexOf(unigram));
					unigram.setCount(unigram.getCount() + 1);
				}
			}
		} finally {
			scanner.close();
		}
		return unigrams;
	}

	@Override
	public void calculateSmoothedProbability(ArrayList<NGram> unigrams) {

	}

	@Override
	public void calculateUnsmoothedProbability(ArrayList<NGram> unigrams) {

	}

	public int getTotalUnigramCount() {
		return totalUnigramCount;
	}

	public void setTotalUnigramCount(int totalUnigramCount) {
		this.totalUnigramCount = totalUnigramCount;
	}

}
