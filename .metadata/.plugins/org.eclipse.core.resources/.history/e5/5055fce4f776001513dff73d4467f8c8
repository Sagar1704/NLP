package sea.nlp.pos;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Iterator;
import java.util.Scanner;

public class POSTaggerMain {
	private static final String OUTPUT = "output";
	private static final String INPUT = "input.txt";
	private POS pos;
	
	public POSTaggerMain() {
		pos = new POS();
	}
	
	public static void main(String[] args) {

	}

	public void getWordTags() throws FileNotFoundException {
		Scanner scanner = new Scanner(new File(INPUT));

		while (scanner.hasNext()) {
			String token = scanner.next();
			String word = token.split("_")[0];
			String tag =  token.split("_")[1];
			
			pos.addWord(word, tag);
		}
		scanner.close();
	}

	public void reTag() {
		Scanner scanner = new Scanner(new File(INPUT));

		PrintWriter writer = new PrintWriter(OUTPUT);

		while (scanner.hasNextLine()) {
			String line = scanner.nextLine();
			for (String token : line.split(" ")) {
				String word = token.split("_")[0];
				String tag = token.split("_")[1];
				String correctTag = pos.getCorrectTag(word);
				if (!token.split("_")[1].equals(correctTag)) {
					errorCounter++;
					WordError word = new WordError(token.split("_")[0]);
					for (Iterator<WordError> treeIterator = wordErrors.iterator(); treeIterator.hasNext();) {
						WordError wordError = (WordError) treeIterator.next();
						if (wordError.equals(word)) {
							word.setErrorCount(wordError.getErrorCount() + 1);
							treeIterator.remove();
							break;
						}
					}
					wordErrors.add(word);
				}
				writer.write(token.split("_")[0] + "_" + correctTag + " ");
			}
			writer.println();
		}

		writer.close();
		scanner.close();

	}
	public POS getPos() {
		return pos;
	}

	public void setPos(POS pos) {
		this.pos = pos;
	}
}
